name: Dependency Review

on:
  pull_request:
    branches: [ master, develop, 'release/**' ]

permissions:
  contents: read
  pull-requests: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          fail-on-scopes: runtime
          allow-dependencies-licenses: |
            Apache-2.0
            MIT
            BSD-2-Clause
            BSD-3-Clause
            ISC
            0BSD
          comment-summary-in-pr: always
          warn-only: false

  license-check:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Generate license report
        run: ./gradlew generateLicenseReport
        continue-on-error: true

      - name: Upload license report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: license-report
          path: build/reports/dependency-license/
          retention-days: 30

  vulnerability-scan:
    name: Vulnerability Database Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Run vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
        continue-on-error: true

      - name: Upload vulnerability scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-fs-results.sarif'
        continue-on-error: true