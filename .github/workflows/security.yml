name: Security Scan

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop, master, 'hotfix/*', 'release/*' ]
    paths:
      - '**/build.gradle.kts'
      - 'gradle/libs.versions.toml'
      - 'gradle.properties'
  pull_request:
    branches: [ main, develop, master, 'feature/*', 'hotfix/*', 'release/*' ]
    paths:
      - '**/build.gradle.kts'
      - 'gradle/libs.versions.toml'
      - 'gradle.properties'
  workflow_dispatch:

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Cache OWASP database
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches/dependency-check-data
          key: ${{ runner.os }}-owasp-db-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-owasp-db-

      - name: Run OWASP dependency check
        run: ./gradlew dependencyCheckAnalyze --no-daemon --stacktrace
        continue-on-error: true

      - name: Upload OWASP dependency check results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: build/reports/dependency-check-report.sarif
          category: dependency-check
        continue-on-error: true

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: |
            build/reports/dependency-check-*
          retention-days: 30

      - name: Check for dependency updates
        run: ./gradlew dependencyUpdates --no-daemon

      - name: Upload dependency updates report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-updates
          path: build/dependencyUpdates/report.json
          retention-days: 7

  container-scan:
    runs-on: ubuntu-latest
    needs: dependency-scan
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Build container image for scanning
        run: |
          ./gradlew bootBuildImage \
            --imageName=security-scan:latest \
            --no-daemon

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'security-scan:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: container-scan

      - name: Run Grype vulnerability scanner
        uses: anchore/scan-action@v4
        id: grype-scan
        with:
          image: 'security-scan:latest'
          severity-cutoff: medium
          output-format: sarif

      - name: Upload Grype scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}
          category: grype-scan

  code-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin
          queries: security-extended,security-and-quality

      - name: Setup Java 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Build for CodeQL analysis
        run: ./gradlew compileKotlin compileTestKotlin --no-daemon

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java-kotlin"