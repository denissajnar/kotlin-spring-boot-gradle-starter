name: Release

on:
  push:
    branches: [ main, develop, master, 'hotfix/*', 'release/*' ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      build_native:
        description: 'Build native image'
        required: false
        default: 'false'
        type: boolean
      target_branch:
        description: 'Target branch for release'
        required: false
        default: 'main'
        type: choice
        options:
          - main
          - develop
          - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        build-type: [ jvm, native ]
        exclude:
          - build-type: native
        include:
          - build-type: native
            if: ${{ github.event.inputs.build_native == 'true' || startsWith(github.ref, 'refs/tags/') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Run full test suite
        run: ./gradlew test --no-daemon --stacktrace

      - name: Run quality checks
        run: |
          ./gradlew spotlessCheck --no-daemon
          ./gradlew ktlintCheck --no-daemon
          ./gradlew koverXmlReport --no-daemon

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
          flavor: |
            suffix=${{ matrix.build-type == 'native' && '-native' || '' }}

      - name: Build JVM container image
        if: matrix.build-type == 'jvm'
        run: |
          ./gradlew bootBuildImage \
            --imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }} \
            --no-daemon

      - name: Build native container image
        if: matrix.build-type == 'native'
        run: |
          ./gradlew bootBuildImage \
            --imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }} \
            -Pnative \
            --no-daemon

      - name: Push container image
        run: |
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
            docker push "$tag"
          done

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ matrix.build-type }}
          format: spdx-json
          output-file: sbom-${{ matrix.build-type }}.spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.build-type }}
          path: sbom-${{ matrix.build-type }}.spdx.json
          retention-days: 90

      - name: Create GitHub Release
        if: (startsWith(github.ref, 'refs/tags/') || (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'))) && matrix.build-type == 'jvm'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app/build/libs/*.jar
            sbom-*.spdx.json
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') || github.ref == 'refs/heads/develop' }}
          tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('v{0}-{1}', github.run_number, github.ref_name) }}
          name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('Release {0} from {1}', github.run_number, github.ref_name) }}